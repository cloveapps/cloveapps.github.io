{"version":3,"sources":["webpack:///./src/components/ProductCard.jsx","webpack:///./src/components/About.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/_ui/Button.jsx"],"names":["ProductCardContainer","Link","dimensions","maxwidthTablet","maxwidthMobile","colors","blue500","ProductCardContent","ProductCardCategory","grey600","ProductCardTitle","ProductCardBlurb","ProductCardAction","ProductCardImageContainer","grey200","ProductCard","category","title","description","thumbnail","uid","to","className","text","RichText","render","src","url","alt","AboutContainer","AboutLinkContainer","AboutLink","AboutBio","AboutActions","About","bio","socialLinks","map","social","i","key","href","about_link","spans","data","target","rel","Button","Hero","orange500","green500","purple500","teal500","orange600","orange200","green600","green200","blue600","blue200","purple600","purple200","teal600","teal200","Section","ProductsAction","UpdateItem","grey800","RenderBody","home","products","updates","meta","name","content","property","author","concat","hero_title","hero_button_link","hero_button_text","product","node","product_category","product_title","product_preview_description","product_preview_thumbnail","_meta","update","update_link","update_type","update_title","update_body","about_title","about_bio","about_links","query","doc","prismic","home_page","allProducts","edges","allUpdates","site","siteMetadata","Layout","ButtonContainer","blue400","pink400","purple400","blue300","this","props","children","onClick","Component"],"mappings":"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","file":"component---src-pages-index-js-f2a44a2bb9d3287aecde.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { RichText } from \"prismic-reactjs\";\nimport styled from \"@emotion/styled\";\nimport dimensions from \"styles/dimensions\";\nimport colors from \"styles/colors\";\nimport PropTypes from \"prop-types\";\n\nconst ProductCardContainer = styled(Link)`\n    display: grid;\n    grid-template-columns: 4fr 7fr;\n    box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.06);\n    margin-bottom: 4em;\n    transition: all 150ms ease-in-out;\n    text-decoration: none;\n    color: currentColor;\n\n    @media(max-width:950px) {\n        grid-template-columns: 4.5fr 7fr;\n    }\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        grid-template-columns: 1fr;\n    }\n\n    @media(max-width:${dimensions.maxwidthMobile}px) {\n        margin-bottom: 2em;\n    }\n\n    &:hover {\n        box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.1);\n        transition: all 150ms ease-in-out;\n\n        .ProductCardAction {\n            color: ${colors.blue500};\n            transition: all 150ms ease-in-out;\n\n            span {\n                transform: translateX(0px);\n                opacity: 1;\n                transition: transform 150ms ease-in-out;\n            }\n        }\n\n        .ProductCardContent::before {\n            opacity: 0.02;\n            transition: all 150ms ease-in-out;\n        }\n\n        .ProductCardImageContainer::before {\n            opacity: 0.2;\n            transition: all 150ms ease-in-out;\n        }\n    }\n`\n\nconst ProductCardContent = styled(\"div\")`\n    background: white;\n    padding: 4em 3em 2.25em 3em;\n    position: relative;\n\n    &:before {\n        position: absolute;\n        content: \"\";\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        background: ${colors.blue500};\n        mix-blend-mode: multiply;\n        opacity: 0;\n        transition: all 150ms ease-in-out;\n    }\n\n    @media(max-width:950px) {\n        padding: 3.25em 2.5em 2em 2.5em;\n    }\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        grid-row: 2;\n    }\n`\n\nconst ProductCardCategory = styled(\"h6\")`\n    font-weight: 600;\n    color: ${colors.grey600};\n`\n\nconst ProductCardTitle = styled(\"h3\")`\n    margin-bottom: 0.5em;\n    margin-top: 0.5em;\n`\n\nconst ProductCardBlurb = styled(\"div\")`\n    margin-bottom: 0.5em;\n    margin-top: 0.5em;\n    margin-bottom: 5em;\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        margin-bottom: 2.5em;\n    }\n`\n\nconst ProductCardAction = styled(\"div\")`\n    font-weight: 600;\n    text-decoration: none;\n    color: currentColor;\n    transition: all 150ms ease-in-out;\n\n    span {\n        margin-left: 1em;\n        transform: translateX(-8px);\n        display: inline-block;\n        transition: transform 400ms ease-in-out;\n    }\n`\n\nconst ProductCardImageContainer = styled(\"div\")`\n    background: ${colors.grey200};\n    display: flex;\n    justify-content: center;\n    align-items: flex-end;\n    overflow: hidden;\n    position: relative;\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        max-height: 200px;\n        flex-direction: column;\n        align-items: center;\n        justify-content: flex-start;\n    }\n\n    &:before {\n        position: absolute;\n        content: \"\";\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        background: ${colors.blue500};\n        mix-blend-mode: multiply;\n        opacity: 0;\n        transition: all 150ms ease-in-out;\n    }\n\n    img {\n        width: 100%;\n        box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.04);\n\n        @media(max-width:${dimensions.maxwidthTablet}px) {\n        }\n    }\n`\n\nconst ProductCard = ({ category, title, description, thumbnail, uid}) => (\n    <ProductCardContainer to={`/products/${uid}`}>\n        <ProductCardContent className=\"ProductCardContent\">\n            <ProductCardCategory>\n                {category[0].text}\n            </ProductCardCategory>\n            <ProductCardTitle>\n                {title[0].text}\n            </ProductCardTitle>\n            <ProductCardBlurb>\n                {RichText.render(description)}\n            </ProductCardBlurb>\n            <ProductCardAction className=\"ProductCardAction\">\n                Details <span>&#8594;</span>\n            </ProductCardAction>\n        </ProductCardContent>\n        <ProductCardImageContainer className=\"ProductCardImageContainer\">\n            <img src={thumbnail.url} alt={title[0].text}/>\n        </ProductCardImageContainer>\n    </ProductCardContainer>\n)\n\nexport default ProductCard;\n\nProductCard.propTypes = {\n    category: PropTypes.array.isRequired,\n    thumbnail: PropTypes.object.isRequired,\n    title: PropTypes.array.isRequired,\n    description: PropTypes.array.isRequired,\n    uid: PropTypes.string.isRequired\n}","import React from \"react\";\nimport Button from \"components/_ui/Button\";\nimport styled from \"@emotion/styled\";\nimport dimensions from \"styles/dimensions\";\nimport { RichText } from \"prismic-reactjs\";\nimport PropTypes from \"prop-types\";\n\nconst AboutContainer = styled(\"div\")`\n    padding-top: 1em;\n    display: grid;\n    grid-template-columns: 8em 1fr 8em;\n    grid-gap: 3em;\n\n    @media(max-width: ${dimensions.maxwidthTablet}px) {\n        grid-template-columns: 1fr 3fr 1fr;\n    }\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        grid-template-columns: 7em 1fr;\n        grid-template-rows: 3em 1fr;\n        grid-gap: 2em;\n    }\n`\n\nconst AboutLinkContainer = styled(\"div\")`\n    padding-top: 1em;\n    padding-bottom: 3em;\n    display: flex;\n    flex-direction: column;\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        grid-row: 2;\n    }\n`\n\nconst AboutLink = styled(\"a\")`\n    margin-bottom: 1.5em;\n    font-weight: 600;\n    line-height: 1.9;\n    text-decoration: none;\n    color: currentColor;\n\n    span {\n        margin-left: 1em;\n        transform: translateX(-8px);\n        display: inline-block;\n        opacity: 0;\n        transition: all 400ms ease-in-out;\n    }\n\n    &:hover {\n        span {\n            transform: translateX(0px);\n            opacity: 1;\n            transition: all 150ms ease-in-out;\n        }\n    }\n`\n\nconst AboutBio = styled(\"div\")`\n    padding-bottom: 3em;\n    max-width: 480px;\n\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        grid-row: 2;\n    }\n`\n\nconst AboutActions = styled(\"div\")`\n    padding-top: 1em;\n    padding-bottom: 3em;\n\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        padding: 0;\n        grid-column: 1 / -1;\n        grid-row: 1;\n    }\n`\n\n\nconst About = ({ bio, socialLinks }) => (\n    <AboutContainer>\n        <AboutLinkContainer>\n            {socialLinks.map((social, i) => (\n                <AboutLink\n                    key={i}\n                    href={social.about_link[0].spans[0].data.url}\n                    target=\"_blank\" rel=\"noopener noreferrer\">\n                    {social.about_link[0].text}\n                    <span>&#8594;</span>\n                </AboutLink>\n            ))}\n        </AboutLinkContainer>\n        <AboutBio>\n            {RichText.render(bio)}\n        </AboutBio>\n        <AboutActions>\n            <a href=\"mailto:hello@clovelabs.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Button className=\"Button--secondary\">\n                    Contact\n                </Button>\n            </a>\n        </AboutActions>\n    </AboutContainer>\n)\n\nexport default About;\n\nAbout.propTypes = {\n    bio: PropTypes.array.isRequired,\n    socialLinks: PropTypes.array.isRequired,\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { RichText } from \"prismic-reactjs\"\nimport { graphql, Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport colors from \"styles/colors\"\nimport dimensions from \"styles/dimensions\"\nimport Button from \"components/_ui/Button\"\nimport About from \"components/About\"\nimport Layout from \"components/Layout\"\nimport ProductCard from \"components/ProductCard\"\n\nconst Hero = styled(\"div\")`\n  padding-top: 2.5em;\n  padding-bottom: 3em;\n  margin-bottom: 6em;\n  max-width: 830px;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    margin-bottom: 3em;\n  }\n\n  h1 {\n    a {\n      text-decoration: none;\n      transition: all 100ms ease-in-out;\n\n      &:nth-of-type(1) {\n        color: ${colors.orange500};\n      }\n      &:nth-of-type(2) {\n        color: ${colors.green500};\n      }\n      &:nth-of-type(3) {\n        color: ${colors.blue500};\n      }\n      &:nth-of-type(4) {\n        color: ${colors.purple500};\n      }\n      &:nth-of-type(5) {\n        color: ${colors.teal500};\n      }\n\n      &:hover {\n        cursor: pointer;\n        transition: all 100ms ease-in-out;\n\n        &:nth-of-type(1) {\n          color: ${colors.orange600};\n          background-color: ${colors.orange200};\n        }\n        &:nth-of-type(2) {\n          color: ${colors.green600};\n          background-color: ${colors.green200};\n        }\n        &:nth-of-type(3) {\n          color: ${colors.blue600};\n          background-color: ${colors.blue200};\n        }\n        &:nth-of-type(4) {\n          color: ${colors.purple600};\n          background-color: ${colors.purple200};\n        }\n        &:nth-of-type(5) {\n          color: ${colors.teal600};\n          background-color: ${colors.teal200};\n        }\n      }\n    }\n  }\n`\n\nconst Section = styled(\"div\")`\n  margin-bottom: 10em;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    margin-bottom: 4em;\n  }\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`\n\nconst ProductsAction = styled(Link)`\n  font-weight: 600;\n  text-decoration: none;\n  color: currentColor;\n  transition: all 150ms ease-in-out;\n  margin-left: auto;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    margin: 0 auto;\n  }\n\n  span {\n    margin-left: 1em;\n    transform: translateX(-8px);\n    display: inline-block;\n    transition: transform 400ms ease-in-out;\n  }\n\n  &:hover {\n    color: ${colors.blue500};\n    transition: all 150ms ease-in-out;\n\n    span {\n      transform: translateX(0px);\n      opacity: 1;\n      transition: transform 150ms ease-in-out;\n    }\n  }\n`\n\nconst UpdateItem = styled(\"div\")`\n  margin-bottom: 2em;\n  a {\n    text-decoration: none;\n    transition: all 100ms ease-in-out;\n    color: ${colors.grey800};\n    &:hover {\n      cursor: pointer;\n      transition: all 100ms ease-in-out;\n    }\n  }\n  &:nth-of-type(1) a span {\n    color: ${colors.orange500};\n  }\n  &:nth-of-type(2) a span {\n    color: ${colors.green500};\n  }\n  &:nth-of-type(3) a span {\n    color: ${colors.blue500};\n  }\n  &:nth-of-type(4) a span {\n    color: ${colors.purple500};\n  }\n  &:nth-of-type(5) a span {\n    color: ${colors.teal500};\n  }\n`\n\nconst RenderBody = ({ home, products, updates, meta }) => (\n  <>\n    <Helmet\n      title={`Clove Labs - Driving the next wave of Blockchain adoption`}\n      meta={[\n        {\n          name: `description`,\n          content: meta.description,\n        },\n        {\n          property: `og:title`,\n          content: meta.title,\n        },\n        {\n          property: `og:description`,\n          content: meta.description,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: meta.author,\n        },\n        {\n          name: `twitter:title`,\n          content: meta.title,\n        },\n        {\n          name: `twitter:description`,\n          content: meta.description,\n        },\n      ].concat(meta)}\n    />\n    <Hero>\n      {RichText.render(home.hero_title)}\n      <a\n        href={home.hero_button_link.url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Button>{RichText.render(home.hero_button_text)}</Button>\n      </a>\n    </Hero>\n    <Section>\n      {products.map((product, i) => (\n        <ProductCard\n          key={i}\n          category={product.node.product_category}\n          title={product.node.product_title}\n          description={product.node.product_preview_description}\n          thumbnail={product.node.product_preview_thumbnail}\n          uid={product.node._meta.uid}\n        />\n      ))}\n      <ProductsAction to={\"/products\"}>\n        All Products <span>&#8594;</span>\n      </ProductsAction>\n    </Section>\n    <Section>\n      <h3>What's new</h3>\n      {updates.map((update, i) => (\n        <UpdateItem>\n          <a\n            key={i}\n            href={update.node.update_link.url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <h3>\n              <span>{update.node.update_type[0].text}</span>:{\" \"}\n              {update.node.update_title[0].text}\n            </h3>\n          </a>\n          <div>{update.node.update_body[0].text}</div>\n        </UpdateItem>\n      ))}\n    </Section>\n    <Section>\n      {RichText.render(home.about_title)}\n      <About bio={home.about_bio} socialLinks={home.about_links} />\n    </Section>\n  </>\n)\n\nexport default ({ data }) => {\n  //Required check for no data being returned\n  const doc = data.prismic.home_page\n  const products = data.prismic.allProducts.edges\n  const updates = data.prismic.allUpdates.edges\n  const meta = data.site.siteMetadata\n\n  if (!doc || !products || !updates) return null\n\n  return (\n    <Layout>\n      <RenderBody\n        home={doc}\n        products={products}\n        updates={updates}\n        meta={meta}\n      />\n    </Layout>\n  )\n}\n\nRenderBody.propTypes = {\n  home: PropTypes.object.isRequired,\n  products: PropTypes.array.isRequired,\n  updates: PropTypes.array.isRequired,\n  meta: PropTypes.object.isRequired,\n}\n\nexport const query = graphql`\n  {\n    prismic {\n      home_page(lang: \"en-us\", uid: \"home\") {\n        hero_title\n        hero_button_text\n        hero_button_link {\n          ... on PRISMIC__ExternalLink {\n            _linkType\n            url\n          }\n        }\n        about_title\n        about_bio\n        about_links {\n          about_link\n        }\n      }\n      allProducts(sortBy: order_ASC, first: 1) {\n        edges {\n          node {\n            product_title\n            product_preview_description\n            product_preview_thumbnail\n            product_category\n            _meta {\n              uid\n            }\n          }\n        }\n      }\n      allUpdates(sortBy: priority_DESC) {\n        edges {\n          node {\n            update_title\n            update_type\n            update_body\n            update_link {\n              ... on PRISMIC__ExternalLink {\n                _linkType\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { Component } from 'react';\nimport styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport dimensions from \"styles/dimensions\";\n\nconst ButtonContainer = styled(\"button\")`\n    padding: 1em 2em;\n    background: ${colors.blue400};\n    font-weight: 600;\n    color: white;\n    outline: none;\n    border: none;\n    font-size: 1rem;\n    border-radius: 2px;\n    position: relative;\n    transition: background 100ms ease-in-out;\n\n    @media(max-width:${dimensions.maxwidthMobile}px) {\n        padding: 0.8em 1.8em;\n        font-size: 1em;\n    }\n\n    p {\n        margin: 0;\n    }\n\n    &:before {\n        content: \"\";\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(135deg, ${colors.pink400} 0%, ${colors.purple400} 100%);\n        z-index: -1;\n    }\n\n    &:hover {\n        cursor: pointer;\n        background: transparent;\n        transition: background 100ms ease-in-out;\n    }\n\n    &.Button--secondary {\n        background: ${colors.blue200};\n        color: ${colors.blue600};\n        padding: 0.95em 1.8em;\n        font-size: 0.95rem;\n\n        &:hover {\n            background: ${colors.blue300};\n            transition: background 100ms ease-in-out;\n        }\n    }\n`\n\nclass Button extends Component {\n    render() {\n        const { children, ...props } = this.props;\n        return (\n            <ButtonContainer\n                onClick={this.props.onClick}\n                {...props}>\n                {this.props.children}\n            </ButtonContainer>\n        );\n    }\n}\n\nexport default Button;"],"sourceRoot":""}