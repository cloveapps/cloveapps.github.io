{"version":3,"sources":["webpack:///./src/components/ProductCard.jsx","webpack:///./src/pages/products.js"],"names":["ProductCardContainer","Link","dimensions","maxwidthTablet","maxwidthMobile","colors","blue500","ProductCardContent","ProductCardCategory","grey600","ProductCardTitle","ProductCardBlurb","ProductCardAction","ProductCardImageContainer","grey200","ProductCard","category","title","description","thumbnail","uid","to","className","text","RichText","render","src","url","alt","ProductsTitle","Products","products","meta","titleTemplate","name","content","property","author","concat","map","product","i","key","node","product_category","product_title","product_preview_description","product_preview_thumbnail","_meta","data","prismic","allProducts","edges","site","siteMetadata","query"],"mappings":"mLAQMA,EAAuB,YAAOC,OAAP,qBAAH,4PAaHC,IAAWC,eAbR,mDAiBHD,IAAWE,eAjBR,oIA0BLC,IAAOC,QA1BF,qRAgDpBC,EAAqB,YAAO,MAAP,qBAAH,sJAYFF,IAAOC,QAZL,iJAsBDJ,IAAWC,eAtBV,oBA2BlBK,EAAsB,YAAO,KAAP,qBAAH,yBAEZH,IAAOI,QAFK,KAKnBC,EAAmB,YAAO,KAAP,qBAAH,iEAKhBC,EAAmB,YAAO,MAAP,qBAAH,2EAKCT,IAAWC,eALZ,6BAUhBS,EAAoB,YAAO,MAAP,qBAAH,iOAcjBC,EAA4B,YAAO,MAAP,qBAAH,cACbR,IAAOS,QADM,gHAQRZ,IAAWC,eARH,kLAsBTE,IAAOC,QAtBE,iJAgCJJ,IAAWC,eAhCP,UA2DhBY,IAtBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,UAAWC,EAA5C,EAA4CA,IAA5C,OAChB,YAACpB,EAAD,CAAsBqB,GAAE,aAAeD,GACnC,YAACb,EAAD,CAAoBe,UAAU,sBAC1B,YAACd,EAAD,KACKQ,EAAS,GAAGO,MAEjB,YAACb,EAAD,KACKO,EAAM,GAAGM,MAEd,YAACZ,EAAD,KACKa,WAASC,OAAOP,IAErB,YAACN,EAAD,CAAmBU,UAAU,qBAA7B,WACY,+BAGhB,YAACT,EAAD,CAA2BS,UAAU,6BACjC,mBAAKI,IAAKP,EAAUQ,IAAKC,IAAKX,EAAM,GAAGM,W,6KCnK7CM,EAAgB,YAAO,KAAP,sBAAH,6CAIbC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACf,8BACE,YAAC,IAAD,CACEf,MAAK,WACLgB,cAAa,kBACbD,KAAM,CACJ,CACEE,KAAK,cACLC,QAASH,EAAKd,aAEhB,CACEkB,SAAS,WACTD,QAAQ,yBAEV,CACEC,SAAS,iBACTD,QAASH,EAAKd,aAEhB,CACEkB,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASH,EAAKK,QAEhB,CACEH,KAAK,gBACLC,QAASH,EAAKf,OAEhB,CACEiB,KAAK,sBACLC,QAASH,EAAKd,cAEhBoB,OAAON,KAEX,YAAC,IAAD,KACE,YAACH,EAAD,iBACA,8BACGE,EAASQ,KAAI,SAACC,EAASC,GAAV,OACZ,YAAC,IAAD,CACEC,IAAKD,EACLzB,SAAUwB,EAAQG,KAAKC,iBACvB3B,MAAOuB,EAAQG,KAAKE,cACpB3B,YAAasB,EAAQG,KAAKG,4BAC1B3B,UAAWqB,EAAQG,KAAKI,0BACxB3B,IAAKoB,EAAQG,KAAKK,MAAM5B,aAQrB,sBAAe,IAAZ6B,EAAW,EAAXA,KACVlB,EAAWkB,EAAKC,QAAQC,YAAYC,MACpCpB,EAAOiB,EAAKI,KAAKC,aACvB,OAAKvB,EAEE,YAACD,EAAD,CAAUC,SAAUA,EAAUC,KAAMA,IAFrB,MASjB,IAAMuB,EAAK","file":"component---src-pages-products-js-f193df4f53edf201b154.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { RichText } from \"prismic-reactjs\";\nimport styled from \"@emotion/styled\";\nimport dimensions from \"styles/dimensions\";\nimport colors from \"styles/colors\";\nimport PropTypes from \"prop-types\";\n\nconst ProductCardContainer = styled(Link)`\n    display: grid;\n    grid-template-columns: 4fr 7fr;\n    box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.06);\n    margin-bottom: 4em;\n    transition: all 150ms ease-in-out;\n    text-decoration: none;\n    color: currentColor;\n\n    @media(max-width:950px) {\n        grid-template-columns: 4.5fr 7fr;\n    }\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        grid-template-columns: 1fr;\n    }\n\n    @media(max-width:${dimensions.maxwidthMobile}px) {\n        margin-bottom: 2em;\n    }\n\n    &:hover {\n        box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.1);\n        transition: all 150ms ease-in-out;\n\n        .ProductCardAction {\n            color: ${colors.blue500};\n            transition: all 150ms ease-in-out;\n\n            span {\n                transform: translateX(0px);\n                opacity: 1;\n                transition: transform 150ms ease-in-out;\n            }\n        }\n\n        .ProductCardContent::before {\n            opacity: 0.02;\n            transition: all 150ms ease-in-out;\n        }\n\n        .ProductCardImageContainer::before {\n            opacity: 0.2;\n            transition: all 150ms ease-in-out;\n        }\n    }\n`\n\nconst ProductCardContent = styled(\"div\")`\n    background: white;\n    padding: 4em 3em 2.25em 3em;\n    position: relative;\n\n    &:before {\n        position: absolute;\n        content: \"\";\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        background: ${colors.blue500};\n        mix-blend-mode: multiply;\n        opacity: 0;\n        transition: all 150ms ease-in-out;\n    }\n\n    @media(max-width:950px) {\n        padding: 3.25em 2.5em 2em 2.5em;\n    }\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        grid-row: 2;\n    }\n`\n\nconst ProductCardCategory = styled(\"h6\")`\n    font-weight: 600;\n    color: ${colors.grey600};\n`\n\nconst ProductCardTitle = styled(\"h3\")`\n    margin-bottom: 0.5em;\n    margin-top: 0.5em;\n`\n\nconst ProductCardBlurb = styled(\"div\")`\n    margin-bottom: 0.5em;\n    margin-top: 0.5em;\n    margin-bottom: 5em;\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        margin-bottom: 2.5em;\n    }\n`\n\nconst ProductCardAction = styled(\"div\")`\n    font-weight: 600;\n    text-decoration: none;\n    color: currentColor;\n    transition: all 150ms ease-in-out;\n\n    span {\n        margin-left: 1em;\n        transform: translateX(-8px);\n        display: inline-block;\n        transition: transform 400ms ease-in-out;\n    }\n`\n\nconst ProductCardImageContainer = styled(\"div\")`\n    background: ${colors.grey200};\n    display: flex;\n    justify-content: center;\n    align-items: flex-end;\n    overflow: hidden;\n    position: relative;\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        max-height: 200px;\n        flex-direction: column;\n        align-items: center;\n        justify-content: flex-start;\n    }\n\n    &:before {\n        position: absolute;\n        content: \"\";\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        background: ${colors.blue500};\n        mix-blend-mode: multiply;\n        opacity: 0;\n        transition: all 150ms ease-in-out;\n    }\n\n    img {\n        width: 100%;\n        box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.04);\n\n        @media(max-width:${dimensions.maxwidthTablet}px) {\n        }\n    }\n`\n\nconst ProductCard = ({ category, title, description, thumbnail, uid}) => (\n    <ProductCardContainer to={`/products/${uid}`}>\n        <ProductCardContent className=\"ProductCardContent\">\n            <ProductCardCategory>\n                {category[0].text}\n            </ProductCardCategory>\n            <ProductCardTitle>\n                {title[0].text}\n            </ProductCardTitle>\n            <ProductCardBlurb>\n                {RichText.render(description)}\n            </ProductCardBlurb>\n            <ProductCardAction className=\"ProductCardAction\">\n                Details <span>&#8594;</span>\n            </ProductCardAction>\n        </ProductCardContent>\n        <ProductCardImageContainer className=\"ProductCardImageContainer\">\n            <img src={thumbnail.url} alt={title[0].text}/>\n        </ProductCardImageContainer>\n    </ProductCardContainer>\n)\n\nexport default ProductCard;\n\nProductCard.propTypes = {\n    category: PropTypes.array.isRequired,\n    thumbnail: PropTypes.object.isRequired,\n    title: PropTypes.array.isRequired,\n    description: PropTypes.array.isRequired,\n    uid: PropTypes.string.isRequired\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport Layout from \"components/Layout\"\nimport ProductCard from \"components/ProductCard\"\n\nconst ProductsTitle = styled(\"h1\")`\n  margin-bottom: 1em;\n`\n\nconst Products = ({ products, meta }) => (\n  <>\n    <Helmet\n      title={`Products`}\n      titleTemplate={`%s | Clove Labs`}\n      meta={[\n        {\n          name: `description`,\n          content: meta.description,\n        },\n        {\n          property: `og:title`,\n          content: `Products | Clove Labs`,\n        },\n        {\n          property: `og:description`,\n          content: meta.description,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: meta.author,\n        },\n        {\n          name: `twitter:title`,\n          content: meta.title,\n        },\n        {\n          name: `twitter:description`,\n          content: meta.description,\n        },\n      ].concat(meta)}\n    />\n    <Layout>\n      <ProductsTitle>Products</ProductsTitle>\n      <>\n        {products.map((product, i) => (\n          <ProductCard\n            key={i}\n            category={product.node.product_category}\n            title={product.node.product_title}\n            description={product.node.product_preview_description}\n            thumbnail={product.node.product_preview_thumbnail}\n            uid={product.node._meta.uid}\n          />\n        ))}\n      </>\n    </Layout>\n  </>\n)\n\nexport default ({ data }) => {\n  const products = data.prismic.allProducts.edges\n  const meta = data.site.siteMetadata\n  if (!products) return null\n\n  return <Products products={products} meta={meta} />\n}\n\nProducts.propTypes = {\n  products: PropTypes.array.isRequired,\n}\n\nexport const query = graphql`\n  {\n    prismic {\n      allProducts(sortBy: order_ASC) {\n        edges {\n          node {\n            product_title\n            product_preview_description\n            product_preview_thumbnail\n            product_category\n            _meta {\n              uid\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}